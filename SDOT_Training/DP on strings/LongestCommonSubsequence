1) Recursion Approach
import java.util.*;
public class Main 
{   
    public static int LCS(String s1,String s2,int i,int j)
    {
        if(i==-1||j==-1)
           return 0;
        else if(s1.charAt(i)==s2.charAt(j))
           return 1+LCS(s1,s2,i-1,j-1);
        else 
          return Math.max(LCS(s1,s2,i,j-1),LCS(s1,s2,i-1,j));
    }
    public static void main(String[] args)
    {
        Scanner sc=new Scanner(System.in);
        String s1=sc.nextLine(); //abc
        String s2=sc.nextLine(); //bec
        int len1,len2;
        len1=s1.length(); //3
        len2=s2.length(); //3 
        int res=LCS(s1,s2,len1-1,len2-1);
        System.out.print(res); 
    }
}
//Time Complexity: O(2m*n)
Auxiliary Space: O(1)

2)Memoization
// Online Java Compiler
// Use this editor to write, compile and run your Java code online

import java.util.*;
class Main {
   
    public static void main(String[] args) {
        Scanner sc=new Scanner(System.in);
        String str1=sc.nextLine();
        String str2 = sc.nextLine();
    
        int len1=str1.length();
        int len2=str2.length();
        int mat[][] = new int[len1+1][len2+1];
        //base condition
        for(int i=0;i<=len1;i++){
            for(int j=0;j<=len2;j++){
                if(i==0 || j==0){
                    mat[i][j]=0;
                }
                else if(str1.charAt(i-1)==str2.charAt(j-1)){
                    mat[i][j]=1+mat[i-1][j-1];
                }
                else{
                    mat[i][j]= Math.max(mat[i-1][j],mat[i][j-1]);
                }
            }
        }
        System.out.println(mat[len1][len2]);
    }
}
